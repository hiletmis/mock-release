# https://github.com/changesets/action
name: Auto-Release packages

on:
  workflow_dispatch:

env:
  BRANCH_NAME: 'main'

jobs:
  release:
    name: Auto-Release
    runs-on: ubuntu-latest
    permissions:
      contents: write
      id-token: write
      packages: write
      pull-requests: write

    steps:
      - uses: actions/checkout@v4

      - name: Install dependencies
        uses: ./.github/actions/setup-and-install
        with:
          cache: 'pnpm'

      - name: Set branch name
        run: |
          echo "BRANCH_NAME=$(echo $GITHUB_REF | awk -F'/' '{print $3}')" >> $GITHUB_ENV

      - name: Check file existence
        id: check_files
        uses: andstor/file-existence-action@v3
        with:
          files: './.changeset/*.md'
          
      - name: Create release PR
        if: steps.check_files.outputs.files_exists == 'true'
        run: |
          pr_url=$(gh pr create -B production-packages -H ${{env.BRANCH_NAME}} --title 'Merge ${{env.BRANCH_NAME}} into production-packages' --body 'Merges ${{env.BRANCH_NAME}} into production-packages')
          pr_number=$(echo $pr_url | awk -F'/' '{print $NF}')
          echo "PR_NUMBER=$pr_number" >> $GITHUB_ENV
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Merge release PR
        if: steps.check_files.outputs.files_exists == 'true'
        run: gh pr merge ${{env.PR_NUMBER}} --merge --body 'Merges ${{env.BRANCH_NAME}} into production-packages'
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Checkout production-packages
        if: steps.check_files.outputs.files_exists == 'true'
        uses: actions/checkout@v4
        with:
          ref: production-packages
          fetch-depth: 0

      - name: Install dependencies
        if: steps.check_files.outputs.files_exists == 'true'
        uses: ./.github/actions/setup-and-install
        with:
          cache: 'pnpm'

      - name: Changeset version
        if: steps.check_files.outputs.files_exists == 'true'
        run: pnpm changeset version

      - name: Commit changes
        if: steps.check_files.outputs.files_exists == 'true'
        run: |
          git config user.name 'github-actions[bot]'
          git config user.email 'github-actions[bot]@users.noreply.github.com'
          git add .
          git commit -m "ci: update changeset version"
          git push

      - name: Create release PR or publish to npm
        if: steps.check_files.outputs.files_exists == 'true'
        id: changesets
        uses: changesets/action@v1
        with:
          commit: 'ci: release packages'
          title: 'ci: release packages'
          publish: pnpm run packages:publish
        env:
          NPM_TOKEN: ${{ secrets.NPM_TOKEN }}
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Create synchronization PR
        if: steps.check_files.outputs.files_exists == 'true'
        run: gh pr create -B ${{env.BRANCH_NAME}} -H production-packages --title 'Merge production-packages into ${{env.BRANCH_NAME}}' --body 'Merges production-packages into ${{env.BRANCH_NAME}}'
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Merge synchronization PR
        if: steps.check_files.outputs.files_exists == 'true'
        run: gh pr merge production-packages --merge --body 'Merges production-packages into ${{env.BRANCH_NAME}}'
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
